name: ci-cd-cloud-run

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write   # needed for OIDC
  contents: read

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION || 'europe-west1' }}
  AR_REPO: ${{ vars.AR_REPO || 'mlops' }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME || 'cancer-detection-api' }}
  IMAGE: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_checks:
    name: Build + Lint + Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install ruff bandit pip-audit

      - name: Lint & security checks
        run: |
          ruff check .
          bandit -r src || true
          pip-audit -r requirements.txt || true

      - name: Set up gcloud (for docker auth & AR push on main only)
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Auth to GCP via OIDC (main only)
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - name: Configure Docker for Artifact Registry (main only)
        if: github.ref == 'refs/heads/main'
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build image
        run: docker build -t $IMAGE .

      - name: Scan image (Trivy)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: table
          exit-code: '0'
          ignore-unfixed: true

      - name: Push image (main only)
        if: github.ref == 'refs/heads/main'
        run: docker push $IMAGE

    outputs:
      image: ${{ env.IMAGE }}

  deploy_prod:
    name: Deploy to Cloud Run (main only)
    needs: build_and_checks
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Auth to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - name: Deploy
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ needs.build_and_checks.outputs.image }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --service-account run-runtime@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --quiet

      - name: Show URL
        run: gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.GCP_REGION }} --format='value(status.url)'
